# test/test_schema.py

import pytest

from inspect import isclass as _isclass
from eav import schema, Base
from sqlalchemy import create_engine
from sqlalchemy import Integer, String, Float
from sqlalchemy.orm import Session


class TestSchema:
    """Test schema generated by factory function 'schema'
    from module eav without persistence of a database
    engine.

    TEST: 0-xxx
    """

    @classmethod
    def setup_class(class_):
        class_.Schema = schema(
            "Schema",
            attr_str=String(),
            attr_int=Integer(),
            attr_float=Float(),
            )
        

    @classmethod
    def teardown_class(class_):
        pass

    def setup_method(self, method):
        pass

    def teardown_method(self, method):
        pass

    def setup(self):
        pass

    def teardown(self):
        pass

    def test_number_0_0(self):
        """TEST: Define an E-A-V schema
        """
        assert _isclass(self.Schema)
        assert self.Schema.__qualname__ == 'Schema'

    def test_number_0_1(self):
        """TEST: Schema must be a subclass of eav.model.Entity
        and must be an sqlalchemy declarative_base instance
        """
        from eav.models import Entity
        assert issubclass(self.Schema, Entity)
        assert issubclass(self.Schema, Base)

    def test_number_0_2a(self):
        """TEST: Check existence of defined attribute in schema/class
        dictionary
        """
        assert 'attr_str' in dir(self.Schema)
        assert 'attr_int' in dir(self.Schema)
        assert 'attr_float' in dir(self.Schema)

    def test_number_0_2b(self):
        """TEST: Defined attributes access from schema/class level
        must raise an AttributeError exception.
        """
        with pytest.raises(AttributeError):
            getattr(self.Schema, 'attr_str')
            getattr(self.Schema, 'attr_int')
            getattr(self.Schema, 'attr_float')

    def test_number_0_2c(self):
        """TEST: Setting a defined attribute from schema/class level
        must raise an AttributeError exception.
        """
        with pytest.raises(AttributeError):
            setattr(self.Schema, 'attr_str', None)
            setattr(self.Schema, 'attr_int', None)
            setattr(self.Schema, 'attr_float', None)
